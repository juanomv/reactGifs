{"version":3,"sources":["components/AddCategorias.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorias","setCategorias","useState","inputValue","SetinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","categoria","a","url","fetch","resp","json","data","gisf","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","Element","ReactDOM","render","document","getElementById"],"mappings":"2MAgCeA,EA9BO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBM,SAACP,GAEfF,EAAcE,EAAEQ,OAAOF,QAgBfG,YAAY,wB,+BCtBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBF,EAFzB,+DAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATnB,kBAYZK,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAE/B,OADDa,QAAQC,IAAIL,GAEP,sBAAKM,UAAU,6CAAf,UACC,qBAAKC,IAAKhB,EAAKiB,IAAKR,IACpB,4BAAIA,QCFAS,EAAU,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UACvB,ECHyB,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAZAC,qBAAU,WACRzB,EAAQC,GACCyB,MAAK,SAACC,GAAD,OAAUH,EAAS,CACrBjB,KAAKoB,EACLL,SAAQ,SAInB,CAACrB,IAIGsB,EDdwBK,CAAa3B,GAApCqB,EAAP,EAAOA,QAAaT,EAApB,EAAeN,KAKhB,OACE,qCACE,oBAAIW,UAAU,wCAAd,SAAuDjB,IACtDqB,GAAS,mBAAGJ,UAAU,oCAAb,qBACV,qBAAKA,UAAU,WAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aESjBkB,MAtBf,WAEI,MAAoC3C,mBAAS,CAAC,QAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,+CACA,cAAE,EAAF,CAAgBA,cAAeA,IAC/B,uBACA,6BAES6C,EAAWrB,KAAI,SAAAsB,GAAO,OACtB,cAAC,EAAD,CAEA9B,UAAW8B,GADNA,YCX1BC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c6c21beb.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nconst AddCategorias = ({setCategorias}) => {\n    const [inputValue,SetinputValue] = useState('');\n    const handelInput=(e)=>{\n        \n        SetinputValue(e.target.value)\n    }\n    const handelSubmit =(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategorias(cats => [ inputValue,...cats ]);\n            SetinputValue('');\n        }\n        \n    }\n    return (\n        <form onSubmit={handelSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handelInput}\n                placeholder=\"Que Gifs Buscas?\"\n                />\n        </form>\n            \n       \n    )\n}\nAddCategorias.propTypes={\n    setCategorias: PropTypes.func.isRequired\n}\nexport default AddCategorias\n","export const getGifs = async (categoria) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${categoria}&limit=10&api_key=x4sQCONdaq2ktTOZ94NFSORownYrZIHE`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gisf = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    return gisf;\n };","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n   console.log(title)\n    return (\n        <div className='card animate__animated animate__fadeInDown'>\n         <img src={url} alt={title}/>\n         <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n//import { getGifs } from \"../helpers/getGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ categoria }) => {\n   const {loading,data:images} = useFetchGifs(categoria);\n   \n   \n  \n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInDown\">{categoria}</h3>\n      {loading&&<p className=\"sanimate__animated animate__flash\">Loading</p>}\n      <div className=\"cardgrid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(categoria)\n            .then((imgs) => setState({\n                data:imgs,\n                loading:false\n            }));\n   \n\n  }, [categoria]);\n  \n \n\n  return state;\n}\n","import React, { Fragment, useState } from 'react'\nimport AddCategorias from './components/AddCategorias'\nimport { GifGrid } from './components/GifGrid'\n\nfunction GifExpertApp() {\n   \n    const [categorias, setCategorias] = useState(['DBZ'])\n   \n    return (\n        <Fragment>\n            <h2>GiftExportApp</h2>\n            < AddCategorias setCategorias={setCategorias}/>\n            <hr/>\n            <ol>\n            {  \n                     categorias.map(Element=>(\n                     <GifGrid \n                     key={Element}\n                     categoria={Element}/>\n                     ))\n            }\n            </ol>\n        </Fragment>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport'./index.css';\n\nimport GifExpertApp from './GifExpertApp'\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}